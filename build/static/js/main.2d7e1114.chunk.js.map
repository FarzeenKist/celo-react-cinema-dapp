{"version":3,"sources":["components/ui/Notifications.js","utils/index.js","utils/constants.js","components/ui/Identicon.js","components/Wallet.js","logo.svg","components/Cover.js","hooks/useContract.js","utils/QRHelper.js","utils/cinema.js","utils/ticketnft.js","components/pages/Profile.js","components/ui/Loader.js","components/pages/TicketInfo.js","components/pages/AdminPanel/modals/ChangeFilmModal.js","components/pages/AdminPanel/modals/ChangeSessionModal.js","components/pages/AdminPanel/modals/SessionsModal.js","components/pages/AdminPanel/FilmsContainer.js","components/pages/AdminPanel/modals/TicketInfoModal.js","components/pages/AdminPanel/TicketsContainer.js","components/pages/AdminPanel/ManagersContainer.js","components/pages/AdminPanel.js","components/pages/IndexPanel/modals/SessionsModal.js","components/pages/IndexPanel/modals/PurchaseModal.js","components/pages/IndexPanel/FilmsContainer.js","components/pages/Index.js","App.js","hooks/useBalance.js","hooks/useCinemaContract.js","hooks/useTicketNFTContract.js","reportWebVitals.js","index.js"],"names":["Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","truncateAddress","address","slice","length","formatBigNumber","num","shiftedBy","toFixed","leadingZero","timeStampToDate","stamp","d","Date","parseInt","getFullYear","getMonth","getDate","getHours","getMinutes","formatPriceToShow","value","Math","pow","pluralize","count","noun","suffix","compareWithObjectArray","array","obj","some","element","JSON","stringify","Identicon","size","rest","ref","useRef","useEffect","current","innerHTML","appendChild","Jazzicon","style","width","height","Wallet","userRole","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","Menu","Item","href","target","Stack","direction","gap","as","Link","to","Divider","onClick","Cover","connect","connectWallet","console","log","e","src","logo","alt","Button","useContract","abi","contractAddress","useContractKit","getConnectedKit","useState","contract","setContract","getContract","useCallback","kit","web3","eth","Contract","require","createCanvas","loadImage","renderQRcode","ticket_id","type","canvas","ctx","getContext","font","textString","textWidth","measureText","fillText","qrOption","padding","margin","qrString","window","location","origin","QRCode","toDataURL","bufferImage","then","image","drawImage","Promise","resolve","toBlob","uploadTicketImage","buffer","data","FormData","append","filepath","axios","post","maxBodyLength","headers","_boundary","Authorization","process","res","IpfsHash","uploadJson","hash","config","method","url","getUserRole","cinemaContract","methods","call","allCurrentTickets","tickets","getAllFilms","films","allBookings","user","bookings","allClients","clients","allManagers","managers","isNewManager","result","addFilm","performActions","name","poster_img","defaultAccount","send","from","removeManager","addFilmSession","film_id","session","updateFilmSession","setTicketStatus","client","ticket_index","addManager","updateFilm","purchaseBooking","new_bookings","total","ids","tickets_counter","counter","push","i","image_hash","removeFilm","removeSession","mintsByUser","ticketNFTContract","mints","safeMint","uri","nftAddressFile","Profile","setTickets","allFilms","setAllFilms","minted","setMinted","modal","HystModal","linkAttributeName","qr_code","setQRcode","fetchMinted","fetchTickets","history","temp","forEach","unshift","watchQRcode","open","mintNFT","meta_hash","toast","renderButton","search","find","TicketNFT","token_id","map","ticket","key","display","session_datetime","seat","seat_price","float","purchase_datetime","role","Loader","TicketInfo","wallet_address","loading","setLoading","useParams","setTicketIndex","ticket_info","setTicketInfo","film","setFilm","setQrCode","fetchInfo","Object","keys","error","setStatus","success","isUsed","Card","Body","sessions","session_id","datetime","ChangeFilmModal","changeAction","fetchFilms","setName","poster","setPoster","proceed","preventDefault","test","close","action","useLayoutEffect","film_name","film_poster","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","required","ChangeSessionModal","setDatetime","seats","setSeats","seatPrice","setSeatPrice","session_obj","parse","seats_count","toString","onChangeDate","selectedDates","dateStr","instance","flatpickr","disable","date","getDay","minDate","minTime","maxTime","enableTime","dateFormat","min","max","step","SessionsModal","setChangeAction","remove","Table","bordered","responsive","scope","includes","icon","faEdit","faTrash","FilmsContainer","setFilms","viewFilmSessions","setViewFilmSessions","fetchAll","openModal","current_film","films_","rel","faInfoCircle","TicketInfoModal","status","TicketsContainer","setClients","watchTicket","setWatchTicket","temp_clients","temp_","el","boookings","setUsed","watchInfo","Accordion","eventKey","Header","ticket_key","Alert","title","faExternalLink","faCancel","faCheckSquare","ManagersContainer","addressInput","setAddressInput","setManagers","fetchManagers","all_managers","utils","toBN","isZero","addManagerEvent","InputGroup","zIndex","AdminPanel","activeTab","setActiveTab","Tabs","defaultActiveKey","fill","onSelect","Tab","ordered_tickets","setOrderedTickets","setPurchasedFilms","removeTicket","current_tickets","setCurrentTickets","onClickAction","is_in_orders","temp_object","temp_tickets","fetchCurrentTickets","checkAvailable","isAlreadyOrdered","Array","avaiable","disabled","buttonElement","PurchaseModal","purchased_films","st","totalPrice","setTotalPrice","findIndex","undefined","temp_price","purchase","purchases","timestamp_","now","film_key","ses_key","seat_key","faClose","React","updateState","forceUpdate","filter","elem","obj1","obj2","splice","backgroundColor","verticalAlign","color","Img","Index","App","balance","setBalance","getBalance","getTotalBalance","useBalance","Cinema","CinemaAddress","TicketNFTAddress","setUserRole","fetchUserRole","Container","fluid","Nav","Navbar","Brand","CELO","index","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","networks","Alfajores","network","NetworkNames","rpcUrl","graphQl","explorer","chainId","dapp","description","document","getElementById"],"mappings":"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","file":"static/js/main.2d7e1114.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst Notification = () => (\n  <ToastContainer\n    position=\"top-center\"\n    autoClose={5000}\n    hideProgressBar\n    newestOnTop\n    closeOnClick\n    rtl={false}\n    pauseOnFocusLoss\n    draggable={false}\n    pauseOnHover\n  />\n);\n\nconst NotificationSuccess = ({ text }) => (\n  <div>\n    <i className=\"bi bi-check-circle-fill text-success mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst NotificationError = ({ text }) => (\n  <div>\n    <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\n    <span className=\"text-secondary mx-1\">{text}</span>\n  </div>\n);\n\nconst Props = {\n  text: PropTypes.string,\n};\n\nconst DefaultProps = {\n  text: \"\",\n};\n\nNotificationSuccess.propTypes = Props;\nNotificationSuccess.defaultProps = DefaultProps;\n\nNotificationError.propTypes = Props;\nNotificationError.defaultProps = DefaultProps;\n\nexport { Notification, NotificationSuccess, NotificationError };\n","import {ERC20_DECIMALS} from \"./constants\";\n\n// format a wallet address\nexport const truncateAddress = (address) => {\n    if (!address) return\n    return address.slice(0, 5) + \"...\" + address.slice(address.length - 4, address.length);\n}\n\n// convert from big number\nexport const formatBigNumber = (num) => {\n    if (!num) return\n    return num.shiftedBy(-ERC20_DECIMALS).toFixed(2);\n}\n\nexport const leadingZero = (num) => ( (\"0\" + num).slice(-2) );\n\n// Function converts unix timestamp to string date\nexport const timeStampToDate = (stamp) => {\n    const d = new Date(parseInt(stamp));\n\n    return d.getFullYear() + \"-\" +\n        (\"0\" + (d.getMonth() + 1)) + \"-\" +\n        leadingZero(d.getDate()) + \" \" +\n        leadingZero(d.getHours()) + \":\" +\n        leadingZero(d.getMinutes());\n}\n\nexport const formatPriceToShow = (value) => (parseInt(value) / Math.pow(10, ERC20_DECIMALS))\n\nexport const pluralize = (count, noun, suffix = 's') => `${count} ${noun}${count !== 1 ? suffix : ''}`;\n\n// finds object in array of object, if it is found returns true\nexport const compareWithObjectArray = (array, obj) => {\n    return array.some(element => {\n        if (JSON.stringify(element) === JSON.stringify(obj)) {\n            return true;\n        }\n\n        return false;\n    });\n}\n\nexport const compareTwoObjects = (obj1, obj2) => {\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\n}","const ERC20_DECIMALS = 18;\n\nexport { ERC20_DECIMALS };","import { useEffect, useRef } from \"react\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nexport default function Identicon({ address, size, ...rest }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (address && ref.current) {\n      ref.current.innerHTML = \"\";\n      ref.current.appendChild(\n        Jazzicon(size, parseInt(address.slice(2, 10), 16))\n      );\n    }\n  }, [address, size]);\n\n  return (\n    <div {...rest}>\n      <div ref={ref} style={{ width: `${size}px`, height: `${size}px` }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\nimport { formatBigNumber, truncateAddress } from \"./../utils\";\nimport Identicon from \"./ui/Identicon\";\nimport { Link } from \"react-router-dom\";\n\nconst Wallet = ({ address, userRole, amount, symbol, destroy }) => {\n  if (address) {\n    return (\n      <>\n        <Dropdown>\n          <Dropdown.Toggle\n            variant=\"light\"\n            align=\"end\"\n            id=\"dropdown-basic\"\n            className=\"d-flex align-items-center border rounded-pill py-1\"\n          >\n            {amount ? (\n              <>\n                {formatBigNumber(amount)}{\" \"}\n                <span className=\"ms-1\"> {symbol}</span>\n              </>\n            ) : (\n              <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\n            )}\n            <Identicon address={address} size={28} className=\"ms-2 me-1\" />\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu className=\"shadow-lg border-0\">\n            <Dropdown.Item\n              href={`https://alfajores-blockscout.celo-testnet.org/address/${address}/transactions`}\n              target=\"_blank\"\n            >\n              <Stack direction=\"horizontal\" gap={2}>\n                <i className=\"bi bi-person-circle fs-4\" />\n                <span className=\"font-monospace\">\n                  {truncateAddress(address)}\n                </span>\n              </Stack>\n            </Dropdown.Item>\n\n            {userRole && userRole !== \"client\" &&\n              <Dropdown.Item as={Link} to=\"/admin\">\n                Admin panel\n              </Dropdown.Item>\n            }\n\n            <Dropdown.Item as={Link} to=\"/profile\">\n              My profile\n            </Dropdown.Item>\n\n            <Dropdown.Divider />\n            <Dropdown.Item\n              as=\"button\"\n              className=\"d-flex align-items-center\"\n              onClick={() => {\n                destroy();\n              }}\n            >\n              <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\n              Disconnect\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </>\n    );\n  }\n\n  return null;\n};\n\nexport default Wallet;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"../logo.svg\";\nimport { Button } from \"react-bootstrap\";\n\nconst Cover = ({ connect }) => {\n  const connectWallet = async () => {\n    try {\n      await connect();\n    } catch (e) {\n      console.log({ e });\n    }\n  };\n  return (\n    <>\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <p>Celo React Boilerplate</p>\n      <Button variant=\"primary\" onClick={connectWallet}>\n        Connect Wallet\n      </Button>\n    </>\n  );\n};\n\nexport default Cover;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nexport const useContract = (abi, contractAddress) => {\n  const { getConnectedKit, address } = useContractKit();\n  const [contract, setContract] = useState(null);\n\n  const getContract = useCallback(async () => {\n    const kit = await getConnectedKit();\n    setContract(new kit.web3.eth.Contract(abi, contractAddress));\n  }, [getConnectedKit, abi, contractAddress]);\n\n  useEffect(() => {\n    if (address) getContract();\n  }, [address, getContract]);\n\n  return contract;\n};\n","import QRCode from \"qrcode\";\n\nimport axios from \"axios\";\nimport FormData from \"form-data\";\n\nconst { createCanvas, loadImage } = require('canvas');\n\n// renders qr code with label, parameter type is for return object\n// for showing qr code as image, we need data type image\n// for saving it to pinata, we need blob type image\nexport const renderQRcode = async (address, ticket_id, type=\"blob\") => {\n\n    // qr code size\n    const canvas = createCanvas(200, 200);\n    const ctx = canvas.getContext('2d');\n\n    ctx.font = '20px Arial';\n\n    // we set label and set it to the center\n    const textString = \"Ticket #\" + ticket_id,\n        textWidth = ctx.measureText(textString).width;\n\n    ctx.fillText(textString, (canvas.width / 2) - (textWidth / 2), 180);\n\n    const qrOption = {\n        width: 180,\n        padding: 0,\n        margin: 0\n    };\n\n    // qr code value\n    const qrString = window.location.origin + \"/ticket_info/\" + address + \"/ticket/\" + ticket_id;\n    const bufferImage = await QRCode.toDataURL(qrString, qrOption);\n\n    return loadImage(bufferImage).then((image) => {\n        ctx.drawImage(image, 22, 5, 155, 155);\n\n        if(type === \"data\")\n            return canvas.toDataURL();\n\n        return new Promise((resolve) => {\n            canvas.toBlob(resolve);\n        });\n    });\n}\n\n// upload image to pinata, result will be ipfs hash\nexport const uploadTicketImage = async (address, ticket_id) => {\n\n    const buffer = await renderQRcode(address, ticket_id);\n\n    try {\n\n        const data = new FormData();\n        data.append('file', buffer, {\n            filepath: `ticket${ticket_id}.jpg`\n        })\n\n        const res = await axios.post(\"https://api.pinata.cloud/pinning/pinFileToIPFS\", data, {\n            maxBodyLength: \"Infinity\",\n            headers: {\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n                Authorization: `Bearer ${process.env.REACT_APP_PINATA_BEARER_KEY}`\n            }\n        });\n\n        return res.data.IpfsHash;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n// upload json to pinata, result will be ipfs hash\nexport const uploadJson = async (ticket_id, hash) => {\n    var data = JSON.stringify({\n        \"pinataOptions\": {\n            \"cidVersion\": 1\n        },\n        \"pinataMetadata\": {\n            \"name\": `ticket${ticket_id}_metadata`\n        },\n        \"pinataContent\": {\n            \"image\": `https://gateway.pinata.cloud/ipfs/${hash}`\n        }\n    });\n\n    var config = {\n        method: 'post',\n        url: 'https://api.pinata.cloud/pinning/pinJSONToIPFS',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${process.env.REACT_APP_PINATA_BEARER_KEY}`\n        },\n        data: data\n    };\n\n    const res = await axios(config);\n\n    return res.data.IpfsHash;\n}","import { uploadJson, uploadTicketImage } from \"utils/QRHelper\";\n\nexport const getUserRole = async (cinemaContract, address) => {\n    try {\n        return await cinemaContract.methods.userRole(address).call();\n\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const allCurrentTickets = async (cinemaContract) => {\n    var tickets = [];\n\n    try {\n        tickets = await cinemaContract.methods.allCurrentTickets().call();\n    } catch (e) {\n        console.log({ e });\n\n    }\n    return tickets;\n};\n\nexport const getAllFilms = async (cinemaContract) => {\n    var films = [];\n\n    try {\n        films = await cinemaContract.methods.getAllFilms().call();\n    } catch (e) {\n        console.log({ e });\n\n    }\n    return films;\n};\n\nexport const allBookings = async (cinemaContract, user) => {\n    var bookings = [];\n\n    try {\n        bookings = await cinemaContract.methods.allBookings(user).call();\n    } catch (e) {\n        console.log({ e });\n\n    }\n    return bookings;\n};\n\nexport const allClients = async (cinemaContract) => {\n    var clients = [];\n\n    try {\n        clients = await cinemaContract.methods.allClients().call();\n    } catch (e) {\n        console.log({ e });\n    }\n\n    return clients;\n};\n\nexport const allManagers = async (cinemaContract) => {\n    var managers = [];\n\n    try {\n        managers = await cinemaContract.methods.allManagers().call();\n    } catch (e) {\n        console.log({ e });\n    }\n\n    return managers;\n};\n\nexport const isNewManager = async (cinemaContract, address) => {\n    var result;\n\n    try {\n        result = await cinemaContract.methods.isNewManager(address).call();\n    } catch (e) {\n        console.log({ e });\n    }\n\n    return result;\n};\n\nexport const addFilm = async (cinemaContract, performActions, name, poster_img) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.addFilm(name, poster_img).send({ from: defaultAccount });\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const removeManager = async (cinemaContract, performActions, address) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.removeManager(address).send({ from: defaultAccount });\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const addFilmSession = async (cinemaContract, performActions, film_id, session) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.addFilmSession(film_id, session).send({ from: defaultAccount });\n\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const updateFilmSession = async (cinemaContract, performActions, id, film_id, session) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.updateFilmSession(id, film_id, session).send({ from: defaultAccount });\n\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\n\nexport const setTicketStatus = async (cinemaContract, performActions, client, ticket_index, value) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.setTicketStatus(client, ticket_index, value).send({ from: defaultAccount });\n\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const addManager = async (cinemaContract, performActions, address) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.addManager(address).send({ from: defaultAccount });\n\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\n\nexport const updateFilm = async (cinemaContract, performActions, id, name, poster_img) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.updateFilm(id, name, poster_img).send({ from: defaultAccount });\n        });\n\n        return true;\n\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const purchaseBooking = async (cinemaContract, performActions, new_bookings, total) => {\n    var ids = [];\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            // we are going to calculate new tickets ids\n            const counter = await cinemaContract.methods.tickets_counter().call();\n\n            ids.push(parseInt(counter));\n\n            for (var i = new_bookings.length - 1; i--;)\n                ids.push(ids[ids.length - 1] + 1);\n\n            await cinemaContract.methods.purchaseBooking(defaultAccount, new_bookings).send({ from: defaultAccount, value: total }).then(async () => {\n                // this needs to immediately upload our images\n                // in general, uploading takes some time and i thought uploading right after purchase will help\n                // but sometimes images are not avaiable for 5-30 minutes, so we will notice this\n                for (let i in ids) {\n                    const image_hash = await uploadTicketImage(defaultAccount, ids[i]);\n\n                    await uploadJson(ids[i], image_hash);\n                };\n            });\n\n        });\n\n        return true;\n    } catch (e) {\n        console.log({ e });\n\n        return false;\n    }\n};\n\nexport const removeFilm = async (cinemaContract, performActions, id) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.removeFilm(id).send({ from: defaultAccount });\n        });\n\n    } catch (e) {\n        console.log({ e });\n    }\n};\n\nexport const removeSession = async (cinemaContract, performActions, id, film_id) => {\n    try {\n        await performActions(async (kit) => {\n            const { defaultAccount } = kit;\n\n            await cinemaContract.methods.removeSession(id, film_id).send({ from: defaultAccount });\n        });\n\n    } catch (e) {\n        console.log({ e });\n    }\n};\n","\nexport const mintsByUser = async (ticketNFTContract, address) => {\n    var mints = [];\n    \n    try {\n        mints = await ticketNFTContract.methods.mintsByUser(address).call();\n    } catch (e) {\n        console.log({ e });\n    \n    }\n    return mints;\n};\n\nexport const safeMint = async (ticketNFTContract, performActions, address, ticket_id, uri) => {\n    console.log(address, ticket_id, uri);\n    \n    try {\n        await performActions(async (kit) => {\n            const {defaultAccount} = kit;\n            \n            await ticketNFTContract.methods.safeMint(address, ticket_id, uri).send({from: defaultAccount});\n        });\n\n        return true;\n    } catch (e) {\n        console.log({e});\n    }\n};","import HystModal from \"hystmodal\";\nimport \"hystmodal/dist/hystmodal.min.css\";\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { allBookings, getAllFilms } from \"utils/cinema\";\nimport { formatPriceToShow, leadingZero, timeStampToDate } from \"utils\";\nimport { renderQRcode, uploadJson, uploadTicketImage } from \"../../utils/QRHelper\";\nimport { mintsByUser, safeMint } from \"utils/ticketnft\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { toast } from \"react-toastify\";\n\nconst nftAddressFile = require(\"contracts/TicketNFTAddress.json\");\n\n// profile Page\nconst Profile = ({ cinemaContract, ticketNFTContract, address }) => {\n\n    const { performActions } = useContractKit();\n\n    const [tickets, setTickets] = useState(null);\n    const [allFilms, setAllFilms] = useState(null);\n    const [minted, setMinted] = useState([]);\n\n    const modal = new HystModal({ linkAttributeName: \"data-hystmodal\" });\n\n    // qr code image data if requested\n    const [qr_code, setQRcode] = useState(\"\");\n\n    // fetch minted nfts by user\n    const fetchMinted = async () => {\n        const mints = await mintsByUser(ticketNFTContract, address);\n\n        setMinted(mints);\n    }\n\n    // fetch user's tickets and all films\n    const fetchTickets = async () => {\n\n        const films = await getAllFilms(cinemaContract);\n\n        const history = await allBookings(cinemaContract, address);\n\n        // reverse history array so see last purchased tickets first\n        let temp = [];\n\n        history.forEach(element => {\n            temp.unshift(element)\n        });\n\n        setAllFilms(films);\n\n        setTickets(temp);\n    }\n\n    // watch qr code button event\n    const watchQRcode = async (ticket_id) => {\n\n        setQRcode(await renderQRcode(address, ticket_id, \"data\"));\n\n        modal.open('#qr_code')\n    }\n\n    // mint nft event\n    const mintNFT = async (ticket_id) => {\n\n        // upload ticket qr code image to pinata\n        // it have been already uploaded so pinata does not upload it again\n        // and only returns it's ipfs hash\n        const image_hash = await uploadTicketImage(address, ticket_id);\n\n        // get uploaded metadata hash\n        const meta_hash = await uploadJson(ticket_id, image_hash);\n\n        toast(\"Loading, please wait..\");\n\n        // mint nft with specific ipfs gateway url\n        if (await safeMint(ticketNFTContract, performActions, address, ticket_id, `https://gateway.pinata.cloud/ipfs/${meta_hash}`))\n            fetchMinted();\n    }\n\n    // render button on ticket\n    const renderButton = (ticket_id) => {\n        const search = minted.find((value) => value.ticket_id === ticket_id);\n\n        if (search) {\n            return <Button variant=\"outline-dark\" className=\"mx-1\" size=\"sm\" href={`https://explorer.celo.org/alfajores/token/${nftAddressFile.TicketNFT}/instance/${search.token_id}`} target=\"_blank\">\n                Watch minted ticket\n            </Button>\n        } else {\n            return <Button variant=\"outline-dark\" className=\"mx-1\" size=\"sm\" onClick={() => {\n                mintNFT(ticket_id)\n            }}>\n                Mint Ticket NFT\n            </Button>\n        }\n    }\n\n    useEffect(() => {\n        if (cinemaContract && ticketNFTContract && address) {\n            fetchMinted();\n            fetchTickets();\n        }\n\n    }, [cinemaContract, ticketNFTContract])\n\n    return (\n        <>\n            {tickets && tickets.map((ticket, key) =>\n                <div className=\"card mb-2\" key={key}>\n                    <div className=\"row g-0\">\n\n                        <img src={allFilms[ticket.film_id]['poster_img']} alt={allFilms[ticket.film_id]['name']} style={{ width: \"10%\" }} className=\"h-100 card-img\" />\n\n                        <div className=\"card-body\" style={{ display: \"contents\" }}>\n\n                            <span className=\"card-text m-2\">\n                                <h5>Ticket #{ticket.ticket_id}</h5>\n                                Film name: {allFilms[ticket.film_id]['name']} <br />\n                                Session date: {timeStampToDate(ticket.session_datetime)} <br />\n                                Seat: {leadingZero(ticket.seat)}, cost {formatPriceToShow(ticket.seat_price)} CELO\n                            </span>\n                        </div>\n                        <div className=\"card-footer text-muted\">\n                            <Button variant=\"outline-dark\" size=\"sm\" onClick={() => {\n                                watchQRcode(ticket.ticket_id)\n                            }}>\n                                Watch QR code\n                            </Button>\n\n                            {renderButton(ticket.ticket_id)}\n\n                            <div style={{ float: \"right\" }}>\n                                Purchase date - {timeStampToDate(ticket.purchase_datetime)}\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div>\n            )}\n            \n            {/* Modal shows qr code of a ticket */}\n            <div className=\"hystmodal hystmodal--simple\" id=\"qr_code\" aria-hidden=\"true\">\n                <div className=\"hystmodal__wrap\">\n                    <div className=\"hystmodal__window hystmodal__window--long half\" style={{ width: \"200px\", height: \"200px\" }} role=\"dialog\" aria-modal=\"true\">\n                        <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                        <div className=\"hystmodal__styled container-fluid\">\n                            <img src={qr_code} alt=\"QR code of a ticket\" style={{ width: \"100%\" }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </>\n    );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => (\n  <div className=\"d-flex justify-content-center\">\n    <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\n      <span className=\"visually-hidden\">Loading...</span>\n    </Spinner>\n  </div>\n);\nexport default Loader;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { allBookings, getAllFilms, setTicketStatus } from \"utils/cinema\";\nimport { toast } from \"react-toastify\";\nimport Loader from \"components/ui/Loader\";\nimport { renderQRcode } from \"../../utils/QRHelper\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { formatPriceToShow, leadingZero, timeStampToDate } from \"utils\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\n// view ticket info page, link from qr code ticket will open this page\nconst TicketInfo = ({ cinemaContract, wallet_address, userRole }) => {\n\n    const [loading, setLoading] = useState(true);\n\n    // ticket index and ticket id are different things !!!\n    // id is global for all of a tickets\n    // but every user's tickets have their own indexes\n    const { address, ticket_id } = useParams();\n    const [ticket_index, setTicketIndex] = useState();\n\n    const [ticket_info, setTicketInfo] = useState();\n    \n    const [film, setFilm] = useState();\n\n    const [qr_code, setQrCode] = useState();\n\n    const {performActions} = useContractKit();\n\n    // fetch information about a ticket\n    const fetchInfo = async () => {\n        let ticket = [];\n\n        const temp = await allBookings(cinemaContract, address);\n\n        // find ticket index by it's id\n        const ticket_index = Object.keys(temp).find( key => temp[key].ticket_id === ticket_id);\n\n        try {\n            ticket = temp[ticket_index];\n\n            setTicketIndex(ticket_index);\n        } catch (e) {\n            console.log({ e })\n        }\n\n        if (ticket) {\n            // fetch qr code of a ticket\n            setQrCode(await renderQRcode(address, ticket_id, \"data\"));\n\n            // fetch a film\n            const film = (await getAllFilms(cinemaContract))[ticket.film_id];\n            \n            setFilm(film);\n\n            setTicketInfo(ticket);\n        } else {\n            toast.error(\"Ticket not found\");\n        }\n\n        setLoading(false);\n    }\n\n    // if owner or manager opens a page, they have access to change ticket status\n    const setStatus = async (value) => {\n        await setTicketStatus(cinemaContract, performActions, address, ticket_index, value);\n\n        toast.success(\"Success\");\n\n        await fetchInfo();\n    }\n\n    const renderButton = () => {\n        if (ticket_info.isUsed) {\n            return <Button variant=\"outline-dark\" onClick={() => setStatus(false)}>\n                Set as NOT USED\n            </Button>\n        } else {\n            return <Button variant=\"outline-dark\" onClick={() => setStatus(true)}>\n                Set as USED\n            </Button>\n        }\n    }\n\n    useEffect(() => {\n        if (cinemaContract)\n            fetchInfo();\n    }, [cinemaContract]);\n\n    return (\n        <>\n            {!loading ?\n                (userRole === \"owner\" || userRole === \"manager\" || wallet_address === address) && ticket_info ?\n                    <>\n                        <div className=\"pricing-header px-3 py-3 pb-md-4 mx-auto text-center\">\n                            <h3 className=\"display-6\">Ticket Info</h3>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-3 text-center\">\n                                <img src={qr_code} />\n                                {userRole !== \"client\" &&\n                                    renderButton()\n                                }\n                            </div>\n                            <Card className=\"col-md-9\">\n                                <Card.Body>\n                                    ticket: #{ticket_info.ticket_id} <br />\n                                    <hr />\n                                    client: {address} <br />\n                                    seat: {leadingZero(ticket_info.seat)} <br />\n                                    price: {formatPriceToShow(ticket_info.seat_price)} CELO <br />\n                                    <hr />\n                                    film name: {film.name} <br />\n                                    session datetime: {timeStampToDate(film.sessions[ticket_info.session_id].datetime)} <br />\n                                    status: {ticket_info.isUsed ? \"Used\" : \"Not used\"} <br />\n                                    purchase datetime: {timeStampToDate(ticket_info.purchase_datetime)}\n                                </Card.Body>\n                            </Card>\n                        </div>\n                    </>\n\n                    :\n                    <div className=\"pricing-header px-3 py-3 pb-md-4 mx-auto text-center\">\n                        <h3 className=\"display-6\">You have no access to this page !</h3>\n                    </div>\n\n                :\n                <Loader />\n            }\n\n        </>\n\n    );\n};\n\nexport default TicketInfo;\n","import { useState, useLayoutEffect } from \"react\"\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { Form, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { addFilm, updateFilm } from \"utils/cinema\";\n\nconst ChangeFilmModal = ({ modal, cinemaContract, changeAction, fetchFilms }) => {\n\n    const { performActions } = useContractKit();\n\n    const [name, setName] = useState(\"\");\n    const [poster, setPoster] = useState(\"\");\n\n    // create or update film function\n    const proceed = async (e) => {\n        e.preventDefault();\n\n        if (name && poster) {\n            // check if entered string ends with .png or .jpg or .jpeg\n            if (/(jpg|png|jpeg)$/i.test(poster)) {\n\n                // need to close a modal, because it will be over a cover\n                modal.close();\n\n                let result = false;\n\n                if (changeAction.action === \"create\") {\n                    result = await addFilm(cinemaContract, performActions, name, poster);\n\n                    fetchFilms();\n\n                } else if (changeAction.action === \"update\") {\n                    result = await updateFilm(cinemaContract, performActions, changeAction.film_id, name, poster);\n\n                    fetchFilms();\n                }\n\n                if (result)\n                    toast.success('Success !');\n                else\n                    toast.error(\"Error. Check console to see a message\");\n            } else {\n                toast.error(\"Entered link does not seem to be an image\")\n            }\n        }\n    }\n\n    useLayoutEffect(() => {\n        setName(changeAction.film_name ?? \"\");\n        setPoster(changeAction.film_poster ?? \"\");\n\n    }, [changeAction, cinemaContract]);\n\n    return (\n\n        <div className=\"hystmodal hystmodal--simple\" id=\"modalFilmAction\" aria-hidden=\"true\">\n            <div className=\"hystmodal__wrap\">\n                <div className=\"hystmodal__window hystmodal__window--long quort col-md-4 px-2 py-2\" role=\"dialog\" aria-modal=\"true\">\n                    <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                    <div className=\"hystmodal__styled container-fluid\">\n                        <div className=\"text-center mt-2\" id=\"modal_update_film_label\">\n                            <h4>\n                                {changeAction.action === \"create\" && \"Add a film\"}\n                                {changeAction.action === \"update\" && \"Update a film\"}\n                            </h4>\n                        </div>\n                        <Form onSubmit={(e) => proceed(e)}>\n                            <Form.Group controlId=\"add_film_name\" className=\"my-2\">\n                                <Form.Label>Film name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter film name\" value={name} onChange={e => setName(e.target.value)} required />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"add_film_poster\" className=\"my-2\">\n                                <Form.Label >Film poster image src</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter film poster image src\" value={poster} onChange={e => setPoster(e.target.value)} required />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\" className=\"my-2\">\n                                {changeAction.action === \"create\" && \"Add\"}\n                                {changeAction.action === \"update\" && \"Update\"}\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default ChangeFilmModal;\n","import { useState, useLayoutEffect } from \"react\"\n\n// import { getRole } from \"./../../utils/cinema\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n// import Loader from \"../../../ui/Loader\";\n\nimport { Form, Button } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\n\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport { addFilmSession, updateFilmSession } from \"utils/cinema\";\n\nimport { ERC20_DECIMALS } from \"utils/constants\";\nimport { formatPriceToShow, timeStampToDate } from \"utils\";\n\nconst ChangeSessionModal = ({ fetchFilms, modal, cinemaContract, changeAction }) => {\n\n    const { performActions } = useContractKit();\n\n    const [datetime, setDatetime] = useState(\"\");\n    const [seats, setSeats] = useState(0);\n    const [seatPrice, setSeatPrice] = useState(0);\n\n    const proceed = async (e) => {\n        e.preventDefault();\n\n        const session_obj = {\n            datetime: Date.parse(datetime),\n            seats_count: seats,\n            seat_price: (seatPrice * Math.pow(10, ERC20_DECIMALS)).toString()\n        };\n\n        modal.close();\n\n        let result = false;\n\n        if (changeAction.action === \"create\") {\n            result = await addFilmSession(cinemaContract, performActions, changeAction.film_id, session_obj);\n        } else if (changeAction.action === \"update\") {\n            result = await updateFilmSession(cinemaContract, performActions, changeAction.session_id, changeAction.film_id, session_obj);\n        }\n        \n        fetchFilms('#sessionPanel', changeAction.film_id);\n\n        if (result)\n            toast.success('Success !');\n        else\n            toast.error(\"Error. Check console to see a message\");\n\n    }\n\n    const onChangeDate = (selectedDates, dateStr, instance) => {\n        setDatetime(dateStr);\n    }\n\n    useLayoutEffect(() => {\n        \n        setDatetime(changeAction.datetime ? timeStampToDate(changeAction.datetime) : \"\");\n        setSeats(changeAction.seats ?? \"\");\n        setSeatPrice(changeAction.seat_price ? formatPriceToShow(changeAction.seat_price) : \"\");\n\n        flatpickr(\"#add_session_date\", {\n            disable: [\n                function (date) {\n                    // cinema will not work on sundays, so we disable it\n                    return (date.getDay() === 0);\n                }\n            ],\n            minDate: \"today\",\n            // cinema will work from 8 am to 10 pm\n            minTime: \"08:00\",\n            maxTime: \"22:00\",\n            enableTime: true,\n            dateFormat: \"Y-m-d H:i\",\n            onChange: onChangeDate\n        });\n\n    }, [changeAction, cinemaContract]);\n\n\n    return (\n\n        <div className=\"hystmodal hystmodal--simple\" id=\"modalSessionAction\" aria-hidden=\"true\">\n            <div className=\"hystmodal__wrap\">\n                <div className=\"hystmodal__window hystmodal__window--long quort col-md-4 px-2 py-2\" role=\"dialog\" aria-modal=\"true\">\n                    <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                    <div className=\"hystmodal__styled container-fluid\">\n                        <div className=\"text-center mt-2\">\n                            <h4>\n                                {changeAction.action === \"create\" && \"Add a session\"}\n                                {changeAction.action === \"update\" && `Update a session`}\n                            </h4>\n                        </div>\n                        <Form onSubmit={(e) => proceed(e)}>\n                            <Form.Group controlId=\"add_session_date\" className=\"my-2\">\n                                <Form.Label>Date</Form.Label>\n                                {/* onChange event must be empty, react doesn't allow adding value without it */}\n                                <Form.Control type=\"text\" value={datetime} onChange={() => {}} placeholder=\"Enter date and time\" required />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"add_session_seats\" className=\"my-2\">\n                                <Form.Label >Seats count</Form.Label>\n                                <Form.Control type=\"number\" min=\"1\" max=\"60\" placeholder=\"Enter seats amount\" value={seats} onChange={e => setSeats(e.target.value)} required />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"add_session_seat_price\" className=\"my-2\">\n                                <Form.Label>Seat price, CELO</Form.Label>\n                                <Form.Control type=\"number\" min=\"0.1\" step=\"0.001\" placeholder=\"Enter seat price\" value={seatPrice} onChange={e => setSeatPrice(e.target.value)} required />\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\" className=\"my-2\">\n                                {changeAction.action === \"create\" && \"Add\"}\n                                {changeAction.action === \"update\" && \"Update\"}\n                            </Button>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n};\n\nexport default ChangeSessionModal;\n","import { useState } from \"react\"\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nimport { removeSession } from \"utils/cinema\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nimport { Table, Button } from 'react-bootstrap';\nimport ChangeSessionModal from \"./ChangeSessionModal\";\n\nimport { timeStampToDate, formatPriceToShow } from \"utils\";\n\nconst SessionsModal = ({ fetchFilms, data, modal, cinemaContract }) => {\n\n    const { performActions } = useContractKit();\n\n    const [changeAction, setChangeAction] = useState({\n        action: null,\n        film_id: null,\n        session_id: null,\n        datetime: \"\",\n        seats: 0,\n        seat_price: 0\n    });\n\n    const remove = async (id, film_id) => {\n        await removeSession(cinemaContract, performActions, id, film_id);\n\n        await fetchFilms('#sessionPanel', film_id);\n    }\n\n    return (\n        <>\n\n            <div className=\"hystmodal hystmodal--simple\" id=\"sessionPanel\" aria-hidden=\"true\">\n                <div className=\"hystmodal__wrap\">\n                    <div className=\"hystmodal__window hystmodal__window--long half\" role=\"dialog\" aria-modal=\"true\">\n                        <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                        <div className=\"hystmodal__styled container-fluid\">\n\n                            <div className=\"text-center mt-2\">\n                                <h4>\n                                    {data.film_name}\n                                </h4>\n                            </div>\n                            <Button variant=\"outline-dark\" className=\"mb-2\" onClick={\n                                () => {\n                                    setChangeAction({\n                                        action: \"create\",\n                                        film_id: data.film_id\n                                    });\n\n                                    modal.open(\"#modalSessionAction\");\n                                }\n                            }>Add new session</Button>\n\n                            <Table bordered responsive>\n                                <thead className=\"thead-dark\">\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        <th scope=\"col\">Date</th>\n                                        <th scope=\"col\">Seats Count</th>\n                                        <th scope=\"col\">Seat Price</th>\n                                        <th name=\"bstable-actions\">Actions</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {data.sessions && data.sessions.map((session, key) => {\n                                        return !session.includes(\"0\") &&\n                                            <tr key={key}>\n                                                <th scope=\"row\">{key}</th>\n                                                <td>{timeStampToDate(session.datetime)}</td>\n                                                <td>{session.seats_count}</td>\n                                                <td>{formatPriceToShow(session.seat_price)} CELO</td>\n                                                <td name=\"bstable-actions\">\n                                                    <div className=\"btn-group pull-right\">\n\n                                                        <Button size=\"sm\" variant=\"default\" onClick={\n                                                            () => {\n                                                                setChangeAction({\n                                                                    action: \"update\",\n                                                                    film_id: data.film_id,\n                                                                    session_id: key,\n                                                                    datetime: session.datetime,\n                                                                    seats: session.seats_count,\n                                                                    seat_price: session.seat_price\n                                                                });\n\n                                                                modal.open(\"#modalSessionAction\");\n                                                            }\n                                                        }>\n                                                            <FontAwesomeIcon icon={faEdit} />\n                                                        </Button>\n                                                        <Button size=\"sm\" variant=\"default\">\n                                                            <FontAwesomeIcon icon={faTrash} onClick={\n                                                                () =>\n                                                                    remove(key, data.film_id)\n                                                            } />\n                                                        </Button>\n\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                    })}\n                                </tbody>\n                            </Table>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <ChangeSessionModal fetchFilms={fetchFilms} modal={modal} cinemaContract={cinemaContract} changeAction={changeAction} />\n\n\n        </>\n    );\n};\n\nexport default SessionsModal;\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport Loader from \"components/ui/Loader\";\n\nimport { getAllFilms, removeFilm } from \"utils/cinema\";\n\nimport ChangeFilmModal from \"./modals/ChangeFilmModal\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle, faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nimport { Table, Button } from 'react-bootstrap';\nimport SessionsModal from \"./modals/SessionsModal\";\n\nconst FilmsContainer = ({ modal, cinemaContract }) => {\n    const [loading, setLoading] = useState(true);\n    const { performActions } = useContractKit();\n\n    const [changeAction, setChangeAction] = useState({\n        film_id: null,\n        film_name: null,\n        film_poster: null,\n        action: null\n    });\n\n    const [films, setFilms] = useState(null);\n\n    const [viewFilmSessions, setViewFilmSessions] = useState({\n        film_id: null,\n        film_name: null,\n        sessions: []\n    });\n\n    const fetchAll = useCallback(async (openModal = null, current_film = null) => {\n        setLoading(true);\n\n        const films_ = await getAllFilms(cinemaContract);\n\n        setFilms(films_);\n\n        if (openModal && current_film) {\n\n            setViewFilmSessions({\n                film_id: current_film,\n                film_name: films_[current_film].name,\n                sessions: films_[current_film].sessions\n            });\n\n            modal.open(openModal);\n        }\n\n        setLoading(false);\n\n    }, [cinemaContract, setFilms, modal, setLoading])\n\n    const remove = async (key) => {\n        await removeFilm(cinemaContract, performActions, key);\n\n        await fetchAll();\n    }\n\n    useEffect(() => {\n        if (cinemaContract)\n            fetchAll();\n\n        return setLoading(false);\n\n    }, [cinemaContract, fetchAll]);\n\n    return (\n        <>\n            {!loading ?\n                <div className=\"tab-pane fade show active\" id=\"films\">\n                    <Button variant=\"outline-dark\" className=\"mb-2 float-left\" onClick={() => { setChangeAction({ action: 'create' }); modal.open('#modalFilmAction') }}>\n                        Add new Film\n                    </Button>\n                    <Table bordered responsive>\n                        <thead className=\"thead-dark\">\n                            <tr>\n                                <th scope=\"col\">#</th>\n                                <th scope=\"col\">Name of the film</th>\n                                <th scope=\"col\">Poster img</th>\n                                <th scope=\"col\">Sessions</th>\n                                <th name=\"bstable-actions\">Actions</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {films && films.map((film, key) => {\n                                return !film.includes(\"\") &&\n                                    <tr key={key}>\n\n                                        <th scope=\"row\">{key}</th>\n                                        <td> {film.name} </td>\n                                        <td> <a href={film.poster_img} target=\"_blank\" rel=\"noreferrer\">Watch</a></td>\n                                        <td>\n                                            {film.sessions.length}{\" \"}\n                                            <Button size=\"sm\" variant=\"default\">\n                                                <FontAwesomeIcon icon={faInfoCircle} onClick={\n                                                    () => {\n                                                        setViewFilmSessions({\n                                                            film_id: key,\n                                                            sessions: film.sessions,\n                                                            film_name: film.name\n                                                        });\n\n                                                        modal.open('#sessionPanel');\n                                                    }\n                                                } />\n                                            </Button>\n                                        </td>\n                                        <td name=\"bstable-actions\">\n                                            <div className=\"btn-group pull-right\">\n                                                <Button size=\"sm\" variant=\"default\">\n                                                    <FontAwesomeIcon icon={faEdit} onClick={\n                                                        () => {\n                                                            setChangeAction({\n                                                                action: 'update',\n                                                                film_id: key,\n                                                                film_name: film.name,\n                                                                film_poster: film.poster_img\n                                                            });\n\n                                                            modal.open('#modalFilmAction')\n                                                        }\n                                                    } />\n                                                </Button>\n                                                <Button size=\"sm\" variant=\"default\">\n                                                    <FontAwesomeIcon icon={faTrash} onClick={() => remove(key)} />\n                                                </Button>\n                                            </div>\n                                        </td>\n                                    </tr>\n                            }\n                            )\n                            }\n\n                        </tbody>\n\n                    </Table>\n\n                    <ChangeFilmModal modal={modal} cinemaContract={cinemaContract} changeAction={changeAction} fetchFilms={fetchAll} />\n\n                    <SessionsModal fetchFilms={fetchAll} modal={modal} cinemaContract={cinemaContract} data={viewFilmSessions} />\n                </div>\n\n                :\n                <Loader />\n            }\n\n        </>\n\n    );\n};\n\nexport default FilmsContainer;\n","import { leadingZero, timeStampToDate } from \"utils\";\n\nconst TicketInfoModal = ({ data }) => {\n    return (\n        <>\n            {!!data &&\n                <div className=\"hystmodal hystmodal--simple\" id=\"ticket_info\" aria-hidden=\"true\">\n                    <div className=\"hystmodal__wrap\">\n                        <div className=\"hystmodal__window hystmodal__window--long half\" role=\"dialog\" aria-modal=\"true\">\n                            <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                            <div className=\"hystmodal__styled container-fluid\">\n                                <div className=\"text-center mt-2\" id=\"ticket_info_label\">\n                                    <h4>Ticket - #{data.ticket_id}</h4>\n                                </div>\n\n                                <div className=\"m-2\">\n                                    Film id: {data.film_id}\n                                </div>\n                                <div className=\"m-2\">\n                                    Film name: {data.film_name}\n                                </div>\n                                <div className=\"m-2\">\n                                    Session id: {data.session_id}\n                                </div>\n                                <div className=\"m-2\">\n                                    Session date: {timeStampToDate(data.session_datetime)}\n                                </div>\n                                <div className=\"m-2\">\n                                    Client: {data.client}\n                                </div>\n                                <div className=\"m-2\">\n                                    Seat: {leadingZero(data.seat)}\n                                </div>\n                                <div className=\"m-2\">\n                                    Status: {data.status ? \"Used\" : \"Not used\"}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n\n    );\n};\n\nexport default TicketInfoModal;\n","import React, { useState, useEffect } from \"react\"\nimport { Accordion, Alert } from \"react-bootstrap\";\n\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport Loader from \"components/ui/Loader\";\n\nimport { allBookings, allClients, getAllFilms, setTicketStatus } from \"utils/cinema\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLink, faCheckSquare, faCancel } from '@fortawesome/free-solid-svg-icons'\nimport TicketInfoModal from \"./modals/TicketInfoModal\";\n\nconst TicketsContainer = ({ cinemaContract, modal }) => {\n    const [loading, setLoading] = useState(false);\n\n    const { performActions } = useContractKit();\n\n    const [clients, setClients] = useState([]);\n\n    const [watchTicket, setWatchTicket] = useState({\n        film_id: null,\n        film_name: null,\n        session_id: null,\n        session_datetime: null,\n        client: null,\n        seat: null,\n        status: null\n    });\n\n    const fetchAll = async () => {\n        setLoading(true);\n\n        let temp_clients = [];\n\n        const temp_ = await allClients(cinemaContract);\n\n        for (let el in temp_) {\n            const boookings = await allBookings(cinemaContract, temp_[el]);\n\n            temp_clients.push({\n                address: temp_[el],\n                tickets: boookings\n            });\n        }\n\n        setClients(temp_clients);\n\n        setLoading(false);\n    }\n\n    const setUsed = async (client, ticket_index, value) => {\n        await setTicketStatus(cinemaContract, performActions, client, ticket_index, value);\n\n        await fetchAll();\n    }\n\n\n    const watchInfo = async (client, ticket) => {\n        const film = (await getAllFilms(cinemaContract))[ticket.film_id];\n\n        setWatchTicket({\n            ticket_id: ticket.ticket_id,\n            film_id: ticket.film_id,\n            film_name: film.name,\n            session_id: ticket.session_id,\n            session_datetime: film.sessions[ticket.session_id].datetime,\n            client,\n            seat: ticket.seat,\n            status: ticket.isUsed\n        });\n\n        modal.open('#ticket_info');\n    }\n\n    useEffect(() => {\n        if (cinemaContract)\n            fetchAll();\n    }, [cinemaContract]);\n\n    return (\n        <>\n            {!loading ?\n                <Accordion className=\"mt-4\">\n\n                    {clients.map((client, key) =>\n                        <Accordion.Item eventKey={key.toString()} key={key} className=\"col-md-8 mx-auto\">\n                            <Accordion.Header>{client.address}</Accordion.Header>\n\n                            <Accordion.Body>\n                                {client.tickets.map((ticket, ticket_key) =>\n                                    <Alert variant=\"secondary\" key={ticket_key} className=\"text-left my-1 py-1\" >\n                                        Ticket #{ticket.ticket_id}\n\n                                        <span className=\"actions float-end\">\n                                            <button className=\"btn btn-sm info mx-1\" title=\"View info\" onClick={() =>\n                                                watchInfo(client.address, ticket)\n                                            }>\n                                                <FontAwesomeIcon icon={faExternalLink}></FontAwesomeIcon>\n                                            </button>\n                                            {ticket.isUsed ?\n                                                <button className=\"btn btn-sm used\" title=\"Set as unused\" onClick={() =>\n                                                    setUsed(client.address, ticket_key, false)\n                                                }>\n                                                    <FontAwesomeIcon icon={faCancel}></FontAwesomeIcon>\n                                                </button>\n                                                :\n                                                <button className=\"btn btn-sm ml-1\" title=\"Set as used\" onClick={() =>\n                                                    setUsed(client.address, ticket_key, true)\n                                                }>\n                                                    <FontAwesomeIcon icon={faCheckSquare}></FontAwesomeIcon>\n                                                </button>\n                                            }\n                                        </span>\n\n                                    </Alert>\n                                )}\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    )}\n\n                    <TicketInfoModal data={watchTicket}/>\n\n                </Accordion>\n                :\n                <Loader />\n            }\n        </>\n\n    );\n};\n\nexport default TicketsContainer;\n","import { useState, useEffect } from \"react\"\nimport { Button, Form, InputGroup, Alert } from \"react-bootstrap\";\n\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport Loader from \"components/ui/Loader\";\nimport { toast } from \"react-toastify\";\nimport { addManager, allManagers, isNewManager, removeManager } from \"utils/cinema\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCancel } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ManagersContainer = ({ cinemaContract }) => {\n    const [loading, setLoading] = useState(true);\n\n    const { performActions, kit } = useContractKit();\n\n    const [addressInput, setAddressInput] = useState(\"\");\n\n    const [managers, setManagers] = useState(null);\n\n    const fetchManagers = async () => {\n        let temp = [];\n\n        const all_managers = await allManagers(cinemaContract);\n\n        for (let key in all_managers) {\n            if (!kit.web3.utils.toBN(all_managers[key]).isZero()) {\n                temp.push(all_managers[key]);\n            }\n        }\n\n        setManagers(temp);\n    }\n\n    useEffect(() => {\n        if (cinemaContract)\n            fetchManagers();\n\n        return setLoading(false);\n\n    }, [cinemaContract]);\n\n    const remove = async (address) => {\n        const result = await removeManager(cinemaContract, performActions, address);\n\n        if (result) {\n            toast.success(\"Success\");\n        } else {\n            toast.error(\"Error, watch console for details\");\n        }\n\n        fetchManagers();\n    }\n\n    const addManagerEvent = async (e) => {\n        e.preventDefault();\n\n        if (addressInput) {\n\n            if (await isNewManager(cinemaContract, addressInput)) {\n\n                if (await addManager(cinemaContract, performActions, addressInput)) {\n                    toast.success(\"Success\");\n\n                    fetchManagers();\n\n                    setAddressInput(\"\");\n                } else {\n                    toast.error(\"Error, watch console for details\")\n                }\n\n            } else {\n                toast.error(\"User is already a manager\");\n            }\n\n        } else {\n            toast.error(\"Address must not be empty\");\n        }\n    }\n\n    return (\n        <>\n            {!loading ?\n                <>\n                    <Form className=\"form-inline col-md-8 mx-auto mt-4\" onSubmit={(e) => addManagerEvent(e)}>\n                        <InputGroup>\n                            <Form.Control className=\"mr-sm-2\" value={addressInput} onChange={(e) => setAddressInput(e.target.value)} type=\"text\" placeholder=\"Address\" aria-label=\"Address of a new manager\" />\n                            <Button variant=\"dark\" style={{ zIndex: \"0\" }} className=\"my-2 my-sm-0\" type=\"submit\">Add new manager</Button>\n                        </InputGroup>\n                    </Form>\n\n                    <hr />\n\n                    <div className=\"text-center mb-3\"><h4>Managers list</h4></div>\n\n                    <div className=\"col-md-8 mx-auto\">\n                        {managers && managers.length ?\n                            managers.map((address, key) =>\n                                <Alert variant=\"secondary\" key={key} className=\"text-left my-1 py-1\" >\n                                    {address}\n\n                                    <button className=\"btn btn-sm float-end p-0\" title=\"Remove manager\">\n                                        <FontAwesomeIcon icon={faCancel} onClick={() => remove(address)}></FontAwesomeIcon>\n                                    </button>\n\n                                </Alert>\n                            )\n\n                            :\n                            <div className=\"text-center\">\n                                <p>The list is empty</p>\n                            </div>\n                        }\n                    </div>\n                </>\n                :\n                <Loader />\n            }\n\n        </>\n\n    );\n};\n\nexport default ManagersContainer;\n","import { useState } from \"react\"\nimport { Tab, Tabs } from 'react-bootstrap';\nimport FilmsContainer from \"./AdminPanel/FilmsContainer\";\nimport TicketsContainer from \"./AdminPanel/TicketsContainer\";\nimport ManagersContainer from \"./AdminPanel/ManagersContainer\";\n\nimport HystModal from \"hystmodal\";\nimport \"hystmodal/dist/hystmodal.min.css\";\n\nconst AdminPanel = ({ cinemaContract, userRole }) => {\n\n    // we will load content of each tab only after clicking on the tab\n    const [activeTab, setActiveTab] = useState(\"films\");\n\n    const modal = new HystModal({ linkAttributeName: \"data-hystmodal\" });\n\n    return (\n        <>\n\n            <div className=\"admin-header px-3 py-3 pb-md-4 mx-auto text-center\">\n                <h3 className=\"display-6\">Admin panel</h3>\n            </div>\n\n            <Tabs defaultActiveKey=\"films\" fill onSelect={(key) => setActiveTab(key)}>\n\n                <Tab eventKey=\"films\" title=\"Films\">\n                    <div className=\"mt-4 mb-2\">\n                        {activeTab === \"films\" && <FilmsContainer modal={modal} cinemaContract={cinemaContract} />}\n                    </div>\n                </Tab>\n                <Tab eventKey=\"tickets\" title=\"Purchased tickets\">\n                    {activeTab === \"tickets\" && <TicketsContainer modal={modal} cinemaContract={cinemaContract} />}\n                </Tab>\n                {userRole === \"owner\" &&\n                    <Tab eventKey=\"managers\" title=\"Managers\">\n                        {activeTab === \"managers\" && <ManagersContainer cinemaContract={cinemaContract} />}\n                    </Tab>\n                }\n\n            </Tabs>\n\n        </>\n\n    );\n};\n\nexport default AdminPanel;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Accordion } from 'react-bootstrap';\n\nimport { timeStampToDate, formatPriceToShow, leadingZero, compareWithObjectArray } from \"utils\";\nimport { useEffect } from 'react';\nimport { allCurrentTickets } from 'utils/cinema';\n\nconst SessionsModal = ({ data, cinemaContract, ordered_tickets, setOrderedTickets, setPurchasedFilms, removeTicket }) => {\n\n    const [current_tickets, setCurrentTickets] = useState([]);\n\n    const buttonElement = (session_id, seat) => {\n        const is_in_orders = isAlreadyOrdered(session_id, seat);\n\n        const avaiable = checkAvailable(session_id, seat);\n\n        return <button key={seat} disabled={!avaiable} className={\"m-1 btn btn-sm select_seat \" + (is_in_orders ? 'btn-primary' : 'btn-outline-dark')} onClick={(e) => {\n            e.preventDefault();\n            onClickAction(session_id, seat, is_in_orders);\n        }}>\n            {leadingZero(seat)}\n        </button>\n    }\n\n    const onClickAction = (session_id, seat, is_in_orders) => {\n        const temp_object = {\n            film_id: data.film_id,\n            session_id: session_id,\n            seat: seat\n        };\n\n        if (!is_in_orders) {\n\n            const temp_tickets = [...ordered_tickets, temp_object];\n\n            setOrderedTickets(temp_tickets);\n\n            let temp_ = [];\n\n            for (let i = 0; i < temp_tickets.length; i++) {\n                const film_id = temp_tickets[i]['film_id'];\n                const session_id = temp_tickets[i]['session_id'];\n\n                if (temp_[film_id]) {\n                    if (!temp_[film_id][session_id])\n                        temp_[film_id][session_id] = [];\n\n                    temp_[film_id][session_id].push(temp_tickets[i]);\n                } else {\n                    temp_[film_id] = [];\n                    temp_[film_id][session_id] = [temp_tickets[i]];\n                }\n            }\n\n            setPurchasedFilms(temp_);\n\n            toast.success(`Success, you have selected seat ${leadingZero(seat)}, close a modal window to purchase.`);\n        } else {\n            removeTicket(temp_object.film_id, temp_object.session_id, temp_object.seat)\n\n            toast.success(`Success, you have deselected seat ${leadingZero(seat)}`);\n        }\n    }\n\n    const fetchCurrentTickets = async () => {\n\n        let temp_tickets = [];\n\n        const tickets = await allCurrentTickets(cinemaContract);\n\n        tickets.forEach((element) => {\n            temp_tickets.push({\n                film_id: parseInt(element.film_id),\n                session_id: parseInt(element.session_id),\n                seat: parseInt(element.seat)\n            })\n        });\n\n        setCurrentTickets(temp_tickets);\n    }\n\n    const checkAvailable = (session_id, seat) => {\n        return !compareWithObjectArray(current_tickets, { \n            film_id: data.film_id, \n            session_id, \n            seat\n        });\n    }\n\n    useEffect(() => {\n        if(cinemaContract)\n            fetchCurrentTickets();\n    }, [cinemaContract, ordered_tickets]);\n\n    const isAlreadyOrdered = (session_id, seat) => {\n        return compareWithObjectArray(ordered_tickets, {\n            film_id: data.film_id,\n            session_id: session_id,\n            seat\n        });\n    }\n\n    return (\n        <>\n            <div className=\"hystmodal hystmodal--simple\" id=\"watchSessions\" aria-hidden=\"true\">\n                <div className=\"hystmodal__wrap\">\n                    <div className=\"hystmodal__window hystmodal__window--long half\" role=\"dialog\" aria-modal=\"true\">\n                        <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                        <div className=\"hystmodal__styled container-fluid\">\n                            <div className=\"text-center my-3\">\n                                <h5>Book a session for {data.film_name} </h5>\n                            </div>\n                            <Accordion className=\"mb-2\">\n                                {data.sessions && data.sessions.map((session, key) => {\n                                    return !session.includes(\"0\") &&\n                                        <Accordion.Item eventKey={key} key={key}>\n\n                                            <Accordion.Header>\n                                                {timeStampToDate(session.datetime)} - {formatPriceToShow(session.seat_price)} CELO per seat\n                                            </Accordion.Header>\n                                            <Accordion.Body>\n\n                                                {Array.from(Array(parseInt(session.seats_count)), (e, i) => {\n                                                    return buttonElement(key, i + 1);\n                                                })}\n\n                                            </Accordion.Body>\n\n                                        </Accordion.Item>\n                                })}\n\n                            </Accordion>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default SessionsModal;\n","import React, { useState, useEffect } from \"react\"\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faClose } from '@fortawesome/free-solid-svg-icons'\n\nimport { toast } from 'react-toastify';\n\nimport { Button, Accordion } from 'react-bootstrap';\nimport { purchaseBooking } from \"utils/cinema\";\n\nimport { timeStampToDate, formatPriceToShow, leadingZero, pluralize } from \"utils\";\n\nconst PurchaseModal = ({ cinemaContract, purchased_films, allFilms, setPurchasedFilms, ordered_tickets, setOrderedTickets, modal, st, removeTicket }) => {\n\n    const [totalPrice, setTotalPrice] = useState(0);\n\n    const { performActions } = useContractKit();\n\n    const open = purchased_films.findIndex((el) => el !== undefined);\n\n    useEffect(() => {\n        if (purchased_films.length) {\n\n            if (!ordered_tickets.length) {\n                modal.close();\n                return;\n            }\n\n            let temp_price = 0;\n\n            ordered_tickets.forEach((ticket) => {\n                temp_price += parseInt(allFilms[ticket.film_id].sessions[ticket.session_id].seat_price);\n            });\n\n            setTotalPrice(temp_price);\n        }\n\n    }, [st, purchased_films, ordered_tickets]);\n\n    const purchase = async () => {\n\n        let purchases = [];\n\n        modal.close();\n\n        const timestamp_ = Date.now();\n\n        // recreate an object of purchases\n        ordered_tickets.forEach((element) => {\n\n            const session = allFilms[element.film_id].sessions[element.session_id];\n\n            purchases.push({\n                ticket_id: 0,\n                film_id: parseInt(element.film_id),\n                session_id: parseInt(element.session_id),\n                seat: parseInt(element.seat),\n                seat_price: session.seat_price,\n                session_datetime: session.datetime,\n                purchase_datetime: timestamp_\n            });\n        });\n        \n        const result = await purchaseBooking(cinemaContract, performActions, purchases, totalPrice.toString());\n\n        if (result) {\n            setPurchasedFilms([]);\n            setOrderedTickets([]);\n\n            toast.success(\"Success, watch your profile to check tickets.\");\n        } else {\n            toast.error(\"Error, watch console to see details\");\n\n            modal.open('#purchaseSessions')\n        }\n    }\n\n    return (\n        <>\n            {!!purchased_films.length && !!ordered_tickets.length &&\n                <div className=\"hystmodal hystmodal--simple\" id=\"purchaseSessions\" aria-hidden=\"true\">\n                    <div className=\"hystmodal__wrap\">\n                        <div className=\"hystmodal__window hystmodal__window--long half\" role=\"dialog\" aria-modal=\"true\">\n                            <button className=\"hystmodal__close\" data-hystclose>Close</button>\n                            <div className=\"hystmodal__styled container-fluid\">\n\n                                <Accordion className=\"mb-2\" defaultActiveKey={parseInt(open)}>\n\n                                    {purchased_films && purchased_films.map((film, film_key) =>\n                                        !!film.length &&\n                                        <Accordion.Item eventKey={film_key} key={film_key}>\n\n                                            <Accordion.Header>\n                                                {allFilms[film_key].name}\n                                            </Accordion.Header>\n\n                                            <Accordion.Body>\n                                                {film && film.map((session, ses_key) =>\n                                                    !!session.length &&\n                                                    <span key={ses_key}>\n                                                        {timeStampToDate(allFilms[film_key]['sessions'][ses_key])} - {pluralize(session.length, 'seat')}\n                                                        <div id=\"purchased_seats\">\n                                                            {session && session.map((seat, seat_key) =>\n\n                                                                <Button key={seat_key} variant=\"outline-dark\" className=\"mr-2 m-1 p-1 px-2\">\n                                                                    {leadingZero(seat['seat'])}{\" \"}\n\n                                                                    <FontAwesomeIcon icon={faClose} onClick={(e) => removeTicket(film_key, ses_key, seat['seat'])} />\n                                                                </Button>\n                                                            )}\n                                                        </div>\n                                                    </span>\n                                                )}\n                                            </Accordion.Body>\n\n                                        </Accordion.Item>\n                                    )}\n\n                                </Accordion>\n\n                                <hr />\n\n                                <div className=\"mb-4\">\n                                    Total: {formatPriceToShow(totalPrice)} CELO for {pluralize(ordered_tickets.length, \"seat\")}{\" \"}\n                                    <Button variant=\"outline-dark\" className=\"float-end\" id=\"proceed_purchase\" onClick={() => purchase()}>Purchase</Button>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nexport default PurchaseModal;\n\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport Loader from \"components/ui/Loader\";\n\nimport { getAllFilms } from \"utils/cinema\";\n\nimport { Card, Button, Alert } from 'react-bootstrap';\nimport SessionsModal from \"./modals/SessionsModal\";\nimport PurchaseModal from \"./modals/PurchaseModal\";\n\nimport { compareTwoObjects, pluralize } from \"utils\";\n\nconst FilmsContainer = ({ modal, cinemaContract }) => {\n    const [loading, setLoading] = useState(false);\n\n    const [films, setFilms] = useState(null);\n\n    const [viewFilmSessions, setViewFilmSessions] = useState({\n        film_id: null,\n        film_name: null,\n        sessions: []\n    });\n\n    // two variables that are almost the same\n    // but we need purchased_films variable to change selection of a specific seat by a user\n    const [ordered_tickets, setOrderedTickets] = useState([]);\n    const [purchased_films, setPurchasedFilms] = useState([]);\n\n    // force rerender component\n    const [st, updateState] = React.useState();\n    const forceUpdate = React.useCallback(() => updateState({}), []);\n\n    // fetching all films\n    const fetchAll = useCallback(async () => {\n        const films_ = await getAllFilms(cinemaContract);\n\n        let temp = [];\n\n        // check if film is not empty\n        // because in solidity we can't delete an element of array, it will be just empty\n        films_.forEach((element, key) =>{\n            if(!element.includes(\"\"))\n                temp[key] = element;\n        })\n\n        setFilms(temp);\n    }, [cinemaContract, setFilms])\n\n    useEffect(() => {\n        setLoading(true);\n\n        if (cinemaContract) {\n            fetchAll();\n\n            return setLoading(false);\n        }\n\n    }, [cinemaContract, purchased_films, loading]);\n\n    // remove ticket from purchases list function\n    const removeTicket = (film_id, session_id, seat) => {\n        \n        // we need to copy an array, purchased_films is still read-only\n        let temp_ = purchased_films;\n\n        // remove ticket from purchases list\n        setOrderedTickets(ordered_tickets.filter((elem) => !compareTwoObjects(elem, {\n            film_id,\n            session_id,\n            seat\n        })));\n\n        // remove purchased seat object\n        temp_[film_id][session_id] = (temp_[film_id][session_id].filter((elem) => elem.seat !== seat));\n\n        // remove purchased session and film properties \n        // if they are empty (we already remove all seats from specific session and film)\n        if (!temp_[film_id][session_id].length)\n            temp_[film_id].splice(session_id, 1);\n\n        if (!temp_[film_id].length)\n            temp_.splice(film_id, 1);\n\n        setPurchasedFilms(temp_);\n\n        // force update component to reload a modal window\n        // it will not reload even after we change it's state\n        forceUpdate();\n    }\n\n    return (\n        <>\n            {!loading ?\n                <>\n                    {ordered_tickets.length !== 0 &&\n                        <Alert className=\"col-9 mx-auto wave-btn\" style={{ backgroundColor: \"black\" }}>\n                            <div>\n                                <span style={{ verticalAlign: \"middle\", color: \"white\" }}>\n                                    You have selected {pluralize(ordered_tickets.length, \"seat\")}\n                                </span>\n                                <Button variant=\"light\" className=\"float-end\" onClick={() => modal.open('#purchaseSessions')}>Purchase</Button>\n\n                            </div>\n                        </Alert>\n                    }\n\n                    <div className=\"row col-md-9 mx-auto\">\n                        <span style={{ display: \"contents\" }}>\n                            {films && films.map((film, key) => {\n                                return !film.includes(\"\") &&\n\n                                    <div className=\"col-md-4 mb-3 d-flex align-items-stretch films_container\" key={key}>\n                                        <Card className=\"card-deck p-0 mx-2 my-2 box-shadow\">\n\n                                            <Card.Img variant=\"top\" src={film.poster_img} />\n\n                                            <Card.Header>\n                                                <h6 className=\"my-0 font-weight-normal\">\n                                                    {film.name}\n                                                </h6>\n                                            </Card.Header>\n\n                                            <Button variant=\"outline-primary\" size=\"lg\" className=\"mt-auto btn-block\" onClick={\n                                                () => {\n                                                    setViewFilmSessions({\n                                                        film_id: key,\n                                                        film_name: film.name,\n                                                        sessions: film.sessions\n                                                    });\n                                                    modal.open('#watchSessions');\n                                                }\n                                            }>\n                                                Watch sessions\n                                            </Button>\n\n                                        </Card>\n                                    </div>\n                            })}\n                            \n                            {(!films || !films.length) &&\n                                <div className=\"mx-auto\">\n                                    There are no films..\n                                </div>\n                            }\n                        </span>\n                    </div>\n                    {\n                    /* sessions of a film modal*/}\n                    <SessionsModal\n                        purchased_films={purchased_films}\n                        setPurchasedFilms={setPurchasedFilms}\n                        ordered_tickets={ordered_tickets}\n                        setOrderedTickets={setOrderedTickets}\n                        data={viewFilmSessions}\n                        cinemaContract={cinemaContract}\n                        removeTicket={removeTicket}\n                    />\n                    {/* purchase modal */}\n                    <PurchaseModal\n                        ordered_tickets={ordered_tickets}\n                        setOrderedTickets={setOrderedTickets}\n                        cinemaContract={cinemaContract}\n                        purchased_films={purchased_films}\n                        setPurchasedFilms={setPurchasedFilms}\n                        allFilms={films}\n                        modal={modal}\n                        st={st}\n                        removeTicket={removeTicket}\n                    />\n                </>\n                :\n                <Loader />\n            }\n\n        </>\n\n    );\n};\n\nexport default FilmsContainer;\n","import FilmsContainer from \"./IndexPanel/FilmsContainer\";\n\nimport HystModal from \"hystmodal\";\nimport \"hystmodal/dist/hystmodal.min.css\";\n\n// Index page, shows films container to user\nconst Index = ({ cinemaContract }) => {\n\n    const modal = new HystModal({ linkAttributeName: \"data-hystmodal\" });\n\n    return (\n        <>\n            <div className=\"pricing-header px-3 py-3 pb-md-4 mx-auto text-center\">\n                <h3 className=\"display-6\">Book a cinema session</h3>\n            </div>\n                \n            <FilmsContainer modal={modal} cinemaContract={cinemaContract} /> \n        </>\n\n    );\n};\n\nexport default Index;\n","import { useState, useLayoutEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\nimport { Notification } from \"components/ui/Notifications\";\nimport Wallet from \"components/Wallet\";\nimport Cover from \"components/Cover\";\nimport { Link } from \"react-router-dom\";\n\nimport { useBalance, useCinemaContract, useTicketNFTContract } from \"hooks\";\nimport { getUserRole } from \"utils/cinema\";\n\nimport Profile from \"components/pages/Profile\";\nimport TicketInfo from \"components/pages/TicketInfo\";\nimport AdminPanel from \"components/pages/AdminPanel\";\nimport Index from \"components/pages/Index\";\n\nimport \"./App.css\";\n\nconst App = function AppWrapper() {\n  const { address, destroy, connect } = useContractKit();\n  const { balance } = useBalance();\n\n  // contracts initializing\n  const cinemaContract = useCinemaContract();\n  const ticketNFTContract = useTicketNFTContract();\n\n  // role of a user, can be client/manager/owner\n  const [userRole, setUserRole] = useState(null);\n\n  const fetchUserRole = async () => {\n    setUserRole(await getUserRole(cinemaContract, address));\n  }\n\n  useLayoutEffect(() => {\n    if (cinemaContract && address)\n      fetchUserRole();\n  }, [address, cinemaContract, userRole]);\n\n  return (\n    <>\n      <Notification />\n      <BrowserRouter>\n        {address ? (\n          <Container fluid=\"md\">\n            <Nav className=\"pt-3 pb-5\">\n              <Nav.Item className=\"ml-auto\">\n                <Navbar.Brand as={Link} to=\"/\">\n                  <h3>Cinema</h3>\n                </Navbar.Brand>\n              </Nav.Item>\n              <Nav.Item className=\"ms-auto\">\n                {/*display user wallet*/}\n                <Wallet\n                  address={address}\n                  userRole={userRole}\n                  amount={balance.CELO}\n                  symbol=\"CELO\"\n                  destroy={destroy}\n                />\n              </Nav.Item>\n            </Nav>\n            <main>\n              <Routes>\n                <Route index element={<Index cinemaContract={cinemaContract} />} />\n                \n                {(userRole === \"owner\" || userRole === \"manager\")  &&\n                  <Route path=\"admin\" element={<AdminPanel cinemaContract={cinemaContract} userRole={userRole}/>} />\n                }\n\n                <Route path=\"profile\" element={<Profile cinemaContract={cinemaContract} ticketNFTContract={ticketNFTContract} address={address} />} />\n\n                <Route path=\"ticket_info/:address/ticket/:ticket_id\" element={<TicketInfo cinemaContract={cinemaContract} wallet_address={address} userRole={userRole} />} />\n              </Routes>\n            </main>\n          </Container>\n        ) : (\n          // display cover if user is not connected\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <Cover connect={connect} />\n            </header>\n          </div>\n        )}\n      </BrowserRouter>\n    </>\n  );\n};\n\nexport default App;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useContractKit } from \"@celo-tools/use-contractkit\";\n\nexport const useBalance = () => {\n  const { address, kit } = useContractKit();\n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    // fetch a connected wallet token balance\n    const value = await kit.getTotalBalance(address);\n    setBalance(value);\n  }, [address, kit]);\n\n  useEffect(() => {\n    if (address) getBalance();\n  }, [address, getBalance]);\n\n  return {\n    balance,\n    getBalance,\n  };\n};\n","import { useContract } from \"./useContract\";\nimport Cinema from \"../contracts/Cinema.json\";\nimport CinemaAddress from \"../contracts/CinemaAddress.json\";\n\n// export interface for smart contract\nexport const useCinemaContract = () =>\n  useContract(Cinema.abi, CinemaAddress.Cinema);\n\n  ","import { useContract } from \"./useContract\";\nimport TicketNFT from \"../contracts/TicketNFT.json\";\nimport TicketNFTAddress from \"../contracts/TicketNFTAddress.json\";\n\n// export interface for smart contract\nexport const useTicketNFTContract = () =>\n  useContract(TicketNFT.abi, TicketNFTAddress.TicketNFT);\n\n  ","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  ContractKitProvider,\n  Alfajores,\n  NetworkNames,\n} from \"@celo-tools/use-contractkit\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@celo-tools/use-contractkit/lib/styles.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContractKitProvider\n      networks={[Alfajores]}\n      network={{\n        name: NetworkNames.Alfajores,\n        rpcUrl: \"https://alfajores-forno.celo-testnet.org\",\n        graphQl: \"https://alfajores-blockscout.celo-testnet.org/graphiql\",\n        explorer: \"https://alfajores-blockscout.celo-testnet.org\",\n        chainId: 44787,\n      }}\n      dapp={{\n        name: \"Celo React TicTacToe\",\n        description: \"Tic Tac Toe Celo Dapp made on React\",\n      }}\n    >\n      <App />\n    </ContractKitProvider>,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}